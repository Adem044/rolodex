[{"C:\\Users\\dhiat\\Desktop\\PROJECTS\\rolodex\\src\\index.js":"1","C:\\Users\\dhiat\\Desktop\\PROJECTS\\rolodex\\src\\App.js":"2","C:\\Users\\dhiat\\Desktop\\PROJECTS\\rolodex\\src\\components\\navBar\\navBar.js":"3","C:\\Users\\dhiat\\Desktop\\PROJECTS\\rolodex\\src\\components\\card-list\\card-list.js":"4","C:\\Users\\dhiat\\Desktop\\PROJECTS\\rolodex\\src\\components\\search-box\\search-box.js":"5","C:\\Users\\dhiat\\Desktop\\PROJECTS\\rolodex\\src\\components\\card\\card.js":"6","C:\\Users\\dhiat\\Desktop\\PROJECTS\\rolodex\\src\\components\\dropDownMenu\\dropDownMenu.js":"7","C:\\Users\\dhiat\\Desktop\\PROJECTS\\rolodex\\src\\components\\fullSize\\FullSize.js":"8","C:\\Users\\dhiat\\Desktop\\PROJECTS\\rolodex\\src\\components\\notifications\\Notifications.js":"9","C:\\Users\\dhiat\\Desktop\\PROJECTS\\rolodex\\src\\components\\card\\fullCardInfo.js":"10"},{"size":168,"mtime":1608452447497,"results":"11","hashOfConfig":"12"},{"size":6768,"mtime":1611557495364,"results":"13","hashOfConfig":"12"},{"size":1931,"mtime":1611998136136,"results":"14","hashOfConfig":"12"},{"size":1614,"mtime":1611951013475,"results":"15","hashOfConfig":"12"},{"size":241,"mtime":1608452407246,"results":"16","hashOfConfig":"12"},{"size":1358,"mtime":1611917925760,"results":"17","hashOfConfig":"12"},{"size":567,"mtime":1608747404493,"results":"18","hashOfConfig":"12"},{"size":341,"mtime":1610435659429,"results":"19","hashOfConfig":"12"},{"size":1261,"mtime":1611997597228,"results":"20","hashOfConfig":"12"},{"size":1626,"mtime":1611951196851,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1iwpvf",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},"C:\\Users\\dhiat\\Desktop\\PROJECTS\\rolodex\\src\\index.js",[],["46","47"],"C:\\Users\\dhiat\\Desktop\\PROJECTS\\rolodex\\src\\App.js",[],"C:\\Users\\dhiat\\Desktop\\PROJECTS\\rolodex\\src\\components\\navBar\\navBar.js",[],"C:\\Users\\dhiat\\Desktop\\PROJECTS\\rolodex\\src\\components\\card-list\\card-list.js",["48"],"import React, { useState } from \"react\";\r\nimport { Card } from \"../card/card\";\r\nimport { useLocation, Route } from \"react-router-dom\";\r\nimport FullCardInfo from \"../card/fullCardInfo\";\r\nimport \"./card-list.styles.css\";\r\n\r\nexport const CardList = ({ myFav, monsters, clicked }) => {\r\n  const [showDetails, setShowDetails] = useState(0);\r\n  let monst = monsters.find((mon) => mon.id === showDetails);\r\n  const location = useLocation();\r\n  return (location.pathname === \"/Favourites\" && myFav.length) ||\r\n    location.pathname !== \"/Favourites\" ? (\r\n    <div className=\"card-list\">\r\n      {/* {monsters.map((monster) => (\r\n        <Route key={monster.id} path={`/Monsters/${monster.id}`}>\r\n          <FullCardInfo monster={monster} />\r\n        </Route>\r\n      ))} */}\r\n      {showDetails\r\n        ? [\r\n            <h2 key=\"h1\" className=\"close\" onClick={() => setShowDetails(0)}>\r\n              X\r\n            </h2>,\r\n            <FullCardInfo key=\"card\" monster={monst} />,\r\n          ]\r\n        : monsters.map((monster) => {\r\n            return (\r\n              <Card\r\n                clicked={(ev, id) => {\r\n                  clicked(ev, id);\r\n                  if (\r\n                    ev.target.tagName !== \"IMG\" &&\r\n                    !ev.target.className.includes(\"fa-bookmark\")\r\n                  )\r\n                    setShowDetails(id);\r\n                }}\r\n                key={monster.id}\r\n                monster={monster}\r\n                isFav={myFav.includes(monster.id)}\r\n              />\r\n            );\r\n          })}\r\n    </div>\r\n  ) : (\r\n    <p>No Monsters Added to Favourites!</p>\r\n  );\r\n};\r\n","C:\\Users\\dhiat\\Desktop\\PROJECTS\\rolodex\\src\\components\\search-box\\search-box.js",[],"C:\\Users\\dhiat\\Desktop\\PROJECTS\\rolodex\\src\\components\\card\\card.js",["49"],"import React, { useState, useContext, useRef } from \"react\";\r\nimport { Spring, config } from \"react-spring/renderprops\";\r\nimport \"./card.styles.css\";\r\nimport { ModeContext } from \"../../App\";\r\n\r\nexport const Card = ({ clicked, isFav, monster: { id, name, email } }) => {\r\n  const paraRef = useRef(null);\r\n  const mode = useContext(ModeContext);\r\n  const [fav, setFav] = useState(isFav);\r\n  const cardMode =\r\n    mode === \"light\" ? \"card-container\" : \"card-container dark-card\";\r\n  return (\r\n    <Spring\r\n      from={{ opacity: 0 }}\r\n      to={{ opacity: 1 }}\r\n      config={{ duration: 500 }}\r\n    >\r\n      {(props) => (\r\n        <div\r\n          style={props}\r\n          className={cardMode}\r\n          onClick={(ev) => clicked(ev, id)}\r\n        >\r\n          <i\r\n            className={fav ? \"fas fa-bookmark\" : \"far fa-bookmark\"}\r\n            style={\r\n              fav ? { top: \"-10px\", transition: \"top 0.15s ease-in\" } : null\r\n            }\r\n            onClick={() => {\r\n              setFav((prevState) => !prevState);\r\n            }}\r\n          ></i>\r\n          <img\r\n            alt=\"monster\"\r\n            src={`https://robohash.org/${id}?set=set2&size=180x180`}\r\n          />\r\n          <h2 className={name.length < 18 ? \"padding-added\" : null}>{name}</h2>\r\n          <p ref={paraRef}>{email}</p>\r\n        </div>\r\n      )}\r\n    </Spring>\r\n  );\r\n};\r\n","C:\\Users\\dhiat\\Desktop\\PROJECTS\\rolodex\\src\\components\\dropDownMenu\\dropDownMenu.js",[],"C:\\Users\\dhiat\\Desktop\\PROJECTS\\rolodex\\src\\components\\fullSize\\FullSize.js",[],"C:\\Users\\dhiat\\Desktop\\PROJECTS\\rolodex\\src\\components\\notifications\\Notifications.js",[],"C:\\Users\\dhiat\\Desktop\\PROJECTS\\rolodex\\src\\components\\card\\fullCardInfo.js",["50","51"],"import React, { useEffect, useState } from \"react\";\r\nimport { Spring, config } from \"react-spring/renderprops\";\r\n\r\nimport \"./fullCardInfo.css\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst FullCardInfo = ({ monster }) => {\r\n  const Id = useParams().id;\r\n\r\n  const [monsters, updateMonsters] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (Id) {\r\n      fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((user) => updateMonsters(user.find((mon) => mon.id == Id)));\r\n    }\r\n  }, []);\r\n\r\n  const arr = Object.entries(Id && monsters ? monsters : monster);\r\n  const filteredArr = arr.filter((arr) => {\r\n    return arr[0] !== \"username\" && typeof arr[1] === \"string\";\r\n  });\r\n  return (\r\n    <Spring\r\n      // reset\r\n      // reverse\r\n      from={{ background: \"#95dada\", borderRadius: \"2%\" }}\r\n      to={{ background: \"thistle\", borderRadius: \"5%\" }}\r\n      config={(key) => (key === \"background\" ? config.slow : { duration: 500 })}\r\n    >\r\n      {(props) => (\r\n        <div style={props} className=\"full-card-container\">\r\n          <img\r\n            alt=\"monster\"\r\n            src={`https://robohash.org/${\r\n              Id && monsters ? monsters.id : monster.id\r\n            }?set=set2&size=180x180`}\r\n          />\r\n          <div className=\"infos\">\r\n            {filteredArr.map((a, i) => (\r\n              <h3 key={i}>\r\n                {a[0]}\r\n                <span>{a[1]}</span>\r\n              </h3>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Spring>\r\n  );\r\n};\r\n\r\nexport default FullCardInfo;\r\n",{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":3,"column":23,"nodeType":"58","messageId":"59","endLine":3,"endColumn":28},{"ruleId":"56","severity":1,"message":"60","line":2,"column":18,"nodeType":"58","messageId":"59","endLine":2,"endColumn":24},{"ruleId":"61","severity":1,"message":"62","line":18,"column":66,"nodeType":"63","messageId":"64","endLine":18,"endColumn":68},{"ruleId":"65","severity":1,"message":"66","line":20,"column":6,"nodeType":"67","endLine":20,"endColumn":8,"suggestions":"68"},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'config' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'Id'. Either include it or remove the dependency array.","ArrayExpression",["71"],"no-global-assign","no-unsafe-negation",{"desc":"72","fix":"73"},"Update the dependencies array to be: [Id]",{"range":"74","text":"75"},[584,586],"[Id]"]