{"version":3,"sources":["components/notifications/Notifications.js","components/navBar/navBar.js","components/fullSize/FullSize.js","components/card/card.js","components/card/fullCardInfo.js","components/card-list/card-list.js","components/search-box/search-box.js","components/dropDownMenu/dropDownMenu.js","App.js","index.js"],"names":["Notifications","deleteHandler","mode","value","useContext","NotifsContext","notificationMode","className","hidden","showDrop","added","length","onClick","map","fav","id","style","backgroundColor","type","alt","src","name","email","NavBar","navItems","clicked","handleNotif","recentNotif","toggleMode","useState","active","setActive","location","useLocation","pathname","navBarClassName","navItem","to","data-notifs-count","ev","target","classList","contains","FullSize","closeFull","clickedImg","Card","isFav","monster","ModeContext","console","log","setFav","cardMode","top","transition","prevState","FullCardInfo","filteredArr","Object","entries","filter","arr","a","i","CardList","myFav","monsters","showDetails","setShowDetails","monst","mon","tagName","includes","SearchBox","placeholder","handleChange","onChange","DropDownMenu","selected","React","createContext","App","e","setState","searchField","cardClickHandler","showFull","recent","push","state","favourites","splice","findIndex","window","localStorage","setItem","showFavs","notifications","navItemHandler","handleSelected","sortBy","bool","prev","handleDelete","JSON","parse","getItem","document","addEventListener","querySelector","onclick","closest","fetch","then","response","json","user","this","sort","b","notifs","reduce","acc","cur","unshift","filteredMonsters","toLowerCase","appMode","Provider","val","path","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d6075d9e.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\r\nimport \"./Notifications.css\";\r\nimport { NotifsContext } from \"../../App\";\r\n\r\nconst Notifications = ({ deleteHandler, mode }) => {\r\n  const value = useContext(NotifsContext);\r\n  const notificationMode =\r\n    mode === \"light\" ? \"notifications\" : \"notifications dark-notifications\";\r\n  return (\r\n    <div className={notificationMode} hidden={!value.showDrop}>\r\n      <h4>\r\n        Notifications <span>{value.added.length}</span>\r\n        <span className=\"delete-all\" onClick={deleteHandler}>\r\n          X\r\n        </span>\r\n      </h4>\r\n      {value.added.map((fav, id) => (\r\n        <div\r\n          className=\"notif\"\r\n          key={id}\r\n          style={{\r\n            backgroundColor:\r\n              fav.type === \"removed\" ? \"tomato\" : \"rgba(179, 202, 145, 0.787)\",\r\n          }}\r\n        >\r\n          <img\r\n            alt=\"monster\"\r\n            src={`https://robohash.org/${fav.id}?set=set2&size=180x180`}\r\n          />\r\n          <div>\r\n            <h5>\r\n              {fav.name}\r\n              <span>{` (${fav.type})`}</span>\r\n            </h5>\r\n            <h6>{fav.email}</h6>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","import React, { useState } from \"react\";\nimport \"./navBar.css\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport Notifications from \"../notifications/Notifications\";\n\nfunction NavBar({\n  navItems,\n  clicked,\n  handleNotif,\n  recentNotif,\n  deleteHandler,\n  toggleMode,\n  mode,\n}) {\n  const [active, setActive] = useState(\"Monsters\");\n  const location = useLocation();\n\n  if (location.pathname !== \"/Favourites\") {\n    if (active !== \"Monsters\") {\n      setActive(\"Monsters\");\n    }\n  }\n  if (location.pathname === \"/Favourites\") {\n    if (active !== \"Favourites\") {\n      setActive(\"Favourites\");\n    }\n  }\n\n  const navBarClassName = mode === \"light\" ? \"nav-bar\" : \"nav-bar dark\";\n  return (\n    <div className={navBarClassName}>\n      {navItems.map((navItem, id) => {\n        return (\n          <Link\n            className={active === navItem ? \"active\" : null}\n            to={`/${navItem}`}\n            onClick={() => {\n              clicked(id);\n              setActive(navItem);\n            }}\n            key={id}\n          >\n            {navItem}\n          </Link>\n        );\n      })}\n      <i\n        data-notifs-count={recentNotif.length}\n        className={`${!recentNotif.length ? \"far\" : \"fas\"} fa-bell`}\n        onClick={(ev) => {\n          handleNotif(ev.target.classList.contains(\"fa-bell\"));\n        }}\n      >\n        <Notifications deleteHandler={deleteHandler} mode={mode} />\n      </i>\n      <div className=\"toggle-mode\">\n        <i\n          className={`${mode === \"light\" ? \"far fa-sun\" : \"fas fa-moon\"} mode`}\n          onClick={toggleMode}\n        ></i>\n        <span className=\"toggle\">\n          {mode === \"light\" ? \"Light Mode\" : \"Dark Mode\"}\n        </span>\n      </div>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React from \"react\";\r\nimport \"./FullSize.css\";\r\n\r\nconst FullSize = ({ closeFull, clickedImg }) => {\r\n  return (\r\n    <div className=\"show-full\" onClick={closeFull}>\r\n      <img\r\n        alt=\"monster\"\r\n        src={`https://robohash.org/${clickedImg}?set=set2&size=180x180`}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FullSize;\r\n","import React, { useState, useContext } from \"react\";\r\nimport \"./card.styles.css\";\r\nimport { ModeContext } from \"../../App\";\r\n\r\nexport const Card = ({ clicked, isFav, monster: { id, name, email } }) => {\r\n  const mode = useContext(ModeContext);\r\n  console.log(mode);\r\n  const [fav, setFav] = useState(isFav);\r\n  const cardMode =\r\n    mode === \"light\" ? \"card-container\" : \"card-container dark-card\";\r\n  return (\r\n    <div className={cardMode} onClick={(ev) => clicked(ev, id)}>\r\n      <i\r\n        className={fav ? \"fas fa-bookmark\" : \"far fa-bookmark\"}\r\n        style={fav ? { top: \"-10px\", transition: \"top 0.15s ease-in\" } : null}\r\n        onClick={() => {\r\n          setFav((prevState) => !prevState);\r\n        }}\r\n      ></i>\r\n      <img\r\n        alt=\"monster\"\r\n        src={`https://robohash.org/${id}?set=set2&size=180x180`}\r\n      />\r\n      <h2 className={name.length < 18 ? \"padding-added\" : null}>{name}</h2>\r\n      <p>{email}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./fullCardInfo.css\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst FullCardInfo = ({ monster }) => {\r\n  // const Id = useParams().id;\r\n  // let monst = monster.filter((mon) => mon.id == Id);\r\n\r\n  const arr = Object.entries(monster);\r\n  const filteredArr = arr.filter((arr) => {\r\n    return arr[0] !== \"username\" && typeof arr[1] === \"string\";\r\n  });\r\n  return (\r\n    <div className=\"full-card-container\">\r\n      <img\r\n        alt=\"monster\"\r\n        src={`https://robohash.org/${monster.id}?set=set2&size=180x180`}\r\n      />\r\n      <div className=\"infos\">\r\n        {filteredArr.map((a, i) => (\r\n          <h3 key={i}>\r\n            {a[0]}\r\n            <span>{a[1]}</span>\r\n          </h3>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FullCardInfo;\r\n","import React, { useState } from \"react\";\r\nimport { Card } from \"../card/card\";\r\nimport { useLocation, Route } from \"react-router-dom\";\r\nimport FullCardInfo from \"../card/fullCardInfo\";\r\nimport \"./card-list.styles.css\";\r\n\r\nexport const CardList = ({ myFav, monsters, clicked }) => {\r\n  const [showDetails, setShowDetails] = useState(0);\r\n  let monst = monsters.filter((mon) => mon.id === showDetails);\r\n  const location = useLocation();\r\n  return (location.pathname === \"/Favourites\" && myFav.length) ||\r\n    location.pathname !== \"/Favourites\" ? (\r\n    <div className=\"card-list\">\r\n      {/* {monsters.map((monster) => (\r\n        <Route key={monster.id} path={`/Monsters/${monster.id}`}>\r\n          <FullCardInfo monster={monster} />\r\n        </Route>\r\n      ))} */}\r\n      {showDetails\r\n        ? [\r\n            <h2 key=\"h1\" className=\"close\" onClick={() => setShowDetails(0)}>\r\n              X\r\n            </h2>,\r\n            <FullCardInfo key=\"card\" monster={monst[0]} />,\r\n          ]\r\n        : monsters.map((monster) => {\r\n            return (\r\n              <Card\r\n                clicked={(ev, id) => {\r\n                  clicked(ev, id);\r\n                  if (\r\n                    ev.target.tagName !== \"IMG\" &&\r\n                    !ev.target.className.includes(\"fa-bookmark\")\r\n                  )\r\n                    setShowDetails(id);\r\n                }}\r\n                key={monster.id}\r\n                monster={monster}\r\n                isFav={myFav.includes(monster.id)}\r\n              />\r\n            );\r\n          })}\r\n    </div>\r\n  ) : (\r\n    <p>No Monsters Added to Favourites!</p>\r\n  );\r\n};\r\n","import React from \"react\";\n\nimport \"./search-box.styles.css\";\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n  <input\n    className=\"search\"\n    type=\"search\"\n    placeholder={placeholder}\n    onChange={handleChange}\n  />\n);\n","import React from \"react\";\r\nimport \"./dropDownMenu.css\";\r\n\r\nfunction DropDownMenu({ selected }) {\r\n  return (\r\n    <div className=\"dropdown\">\r\n      <span className=\"sort\">Sort by</span>\r\n      <span>\r\n        <select\r\n          onChange={(ev) => {\r\n            selected(ev.target.value);\r\n          }}\r\n          name=\"sorted\"\r\n        >\r\n          <option value=\"default\">Default</option>\r\n          <option value=\"a-z\">A-Z</option>\r\n          <option value=\"z-a\">Z-A</option>\r\n        </select>\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DropDownMenu;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport NavBar from \"./components/navBar/navBar\";\r\nimport FullSize from \"./components/fullSize/FullSize\";\r\nimport { CardList } from \"./components/card-list/card-list\";\r\nimport FullCardInfo from \"./components/card/fullCardInfo\";\r\nimport { SearchBox } from \"./components/search-box/search-box\";\r\nimport DropDownMenu from \"./components/dropDownMenu/dropDownMenu\";\r\nimport \"./App.css\";\r\n\r\nexport const NotifsContext = React.createContext({\r\n  added: [],\r\n  showDrop: false,\r\n});\r\n\r\nexport const ModeContext = React.createContext(\"\");\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      monsters: [],\r\n      searchField: \"\",\r\n      showFull: false,\r\n      clickedImg: 0,\r\n      favourites: JSON.parse(window.localStorage.getItem(\"favs\")) || [],\r\n      showFavs: false,\r\n      sortBy: \"default\",\r\n      notifications: [],\r\n      recent: [],\r\n      showDrop: false,\r\n      mode: \"light\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"scroll\", () => {\r\n      if (this.state.showDrop) this.setState({ showDrop: false });\r\n    });\r\n    document.querySelector(\".App\").onclick = (ev) => {\r\n      if (!ev.target.closest(\".fa-bell\")) {\r\n        this.setState({ showDrop: false });\r\n      }\r\n    };\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((response) => response.json())\r\n      .then((user) =>\r\n        this.setState({\r\n          monsters: user,\r\n        })\r\n      );\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ searchField: e.target.value });\r\n  };\r\n\r\n  cardClickHandler = (ev, id) => {\r\n    if (ev.target.tagName === \"IMG\") {\r\n      this.setState({ showFull: true, clickedImg: id });\r\n    } else if (ev.target.className.includes(\"fa-bookmark\")) {\r\n      this.setState((prevState) => prevState.recent.push(id));\r\n      if (!this.state.favourites.includes(id)) {\r\n        this.setState(\r\n          (prevState) => prevState.favourites.push(id),\r\n          () => {\r\n            window.localStorage.setItem(\"favs\", `[${this.state.favourites}]`);\r\n          }\r\n        );\r\n        this.setState((prevState) =>\r\n          prevState.notifications.push({ id, type: \"added\" })\r\n        );\r\n      } else {\r\n        this.setState(\r\n          (prevState) =>\r\n            prevState.favourites.splice(\r\n              prevState.favourites.findIndex((fav) => fav === id),\r\n              1\r\n            ),\r\n          () => {\r\n            window.localStorage.setItem(\"favs\", `[${this.state.favourites}]`);\r\n            return this.state.favourites.length\r\n              ? null\r\n              : this.setState({ showFavs: false });\r\n          }\r\n        );\r\n        this.setState((prevState) =>\r\n          prevState.notifications.push({ id, type: \"removed\" })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  closeFull = () => {\r\n    this.setState({ showFull: false });\r\n  };\r\n\r\n  navItemHandler = (id) => {\r\n    this.setState({ showFavs: id ? true : false });\r\n  };\r\n\r\n  handleSelected = (selected) => {\r\n    this.setState({ sortBy: selected });\r\n  };\r\n  handleNotif = (bool) => {\r\n    this.setState({ recent: [] });\r\n    if (bool)\r\n      this.setState((prev) => {\r\n        return {\r\n          ...prev,\r\n          showDrop: !prev.showDrop,\r\n        };\r\n      });\r\n  };\r\n  handleDelete = () => {\r\n    this.setState({ notifications: [] });\r\n  };\r\n\r\n  toggleMode = () => {\r\n    this.setState({\r\n      mode: this.state.mode === \"light\" ? \"dark\" : \"light\",\r\n    });\r\n  };\r\n  render() {\r\n    let monsters = [...this.state.monsters];\r\n    const {\r\n      showFavs,\r\n      searchField,\r\n      favourites,\r\n      sortBy,\r\n      notifications,\r\n      recent,\r\n      showDrop,\r\n      clickedImg,\r\n      mode,\r\n    } = this.state;\r\n    switch (sortBy) {\r\n      case \"a-z\":\r\n        monsters = monsters.sort((a, b) =>\r\n          a.name > b.name ? 1 : b.name > a.name ? -1 : 0\r\n        );\r\n        break;\r\n      case \"z-a\":\r\n        monsters = monsters.sort((a, b) =>\r\n          b.name > a.name ? 1 : a.name > b.name ? -1 : 0\r\n        );\r\n        break;\r\n      default:\r\n        monsters = this.state.monsters;\r\n    }\r\n    const notifs = notifications.reduce((acc, cur) => {\r\n      for (let monster of monsters) {\r\n        if (monster.id === cur.id) {\r\n          acc.unshift({ ...monster, type: cur.type });\r\n        }\r\n      }\r\n      return acc;\r\n    }, []);\r\n    const myFav = monsters.filter((monster) => favourites.includes(monster.id));\r\n    const whereToSearch = showFavs ? myFav : monsters;\r\n    const filteredMonsters = whereToSearch.filter((monster) =>\r\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\r\n    );\r\n    const appMode = mode === \"light\" ? \"App\" : \"App app-dark\";\r\n    return (\r\n      <div className={appMode}>\r\n        <BrowserRouter>\r\n          {this.state.showFull && (\r\n            <FullSize closeFull={this.closeFull} clickedImg={clickedImg} />\r\n          )}\r\n          <NotifsContext.Provider value={{ added: notifs, showDrop }}>\r\n            <NavBar\r\n              navItems={[\"Monsters\", \"Favourites\"]}\r\n              clicked={(id) => this.navItemHandler(id)}\r\n              handleNotif={(bool) => this.handleNotif(bool)}\r\n              recentNotif={recent}\r\n              deleteHandler={this.handleDelete}\r\n              mode={mode}\r\n              toggleMode={this.toggleMode}\r\n            />\r\n          </NotifsContext.Provider>\r\n          <h1>Monster Rolodex</h1>\r\n          <SearchBox\r\n            placeholder=\"Search Monster\"\r\n            handleChange={this.handleChange}\r\n          />\r\n          <DropDownMenu selected={(val) => this.handleSelected(val)} />\r\n          <Switch>\r\n            <Route path=\"/Monsters/:id\">\r\n              <FullCardInfo monster={monsters} />\r\n            </Route>\r\n            <Route path=\"/Favourites\">\r\n              <ModeContext.Provider value={mode}>\r\n                <CardList\r\n                  clicked={(ev, id) => this.cardClickHandler(ev, id)}\r\n                  monsters={myFav}\r\n                  myFav={favourites}\r\n                />\r\n              </ModeContext.Provider>\r\n            </Route>\r\n            <Route path=\"/\">\r\n              {filteredMonsters.length > 0 ? (\r\n                <ModeContext.Provider value={mode}>\r\n                  <CardList\r\n                    clicked={(ev, id) => this.cardClickHandler(ev, id)}\r\n                    monsters={filteredMonsters}\r\n                    myFav={favourites}\r\n                  />\r\n                </ModeContext.Provider>\r\n              ) : (\r\n                <p className=\"error\">Username Doesn't Exist</p>\r\n              )}\r\n            </Route>\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}