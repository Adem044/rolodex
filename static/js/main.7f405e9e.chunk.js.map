{"version":3,"sources":["components/navBar/navBar.js","components/card/card.js","components/card-list/card-list.js","components/search-box/search-box.js","components/dropDownMenu/dropDownMenu.js","App.js","index.js"],"names":["NavBar","navItems","clicked","useState","active","setActive","className","map","navItem","id","onClick","Card","isFav","monster","name","email","fav","setFav","ev","style","top","transition","prevState","alt","src","length","CardList","myFav","monsters","includes","SearchBox","placeholder","handleChange","type","onChange","DropDownMenu","selected","target","value","App","e","setState","searchField","cardClickHandler","state","favourites","splice","findIndex","showFavs","push","showFull","clickedImg","closeFull","navItemHandler","handleSelected","sortBy","fetch","then","response","json","user","this","sort","a","b","filter","filteredMonsters","toLowerCase","val","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7f405e9e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./navBar.css\";\nfunction NavBar({ navItems, clicked }) {\n  const [active, setActive] = useState(\"Monsters\");\n  return (\n    <div className=\"nav-bar\">\n      {navItems.map((navItem, id) => {\n        return (\n          <span\n            className={active === navItem ? \"active\" : null}\n            key={id}\n            onClick={() => {\n              clicked(id);\n              setActive(navItem);\n            }}\n          >\n            {navItem}\n          </span>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React, { useState } from \"react\";\r\nimport \"./card.styles.css\";\r\n\r\nexport const Card = ({ clicked, isFav, monster: { id, name, email } }) => {\r\n  const [fav, setFav] = useState(isFav);\r\n  return (\r\n    <div className=\"card-container\" onClick={(ev) => clicked(ev, id)}>\r\n      <i\r\n        className={fav ? \"fas fa-bookmark\" : \"far fa-bookmark\"}\r\n        style={fav ? { top: \"-10px\", transition: \"top 0.15s ease-in\" } : null}\r\n        onClick={() => {\r\n          setFav((prevState) => !prevState);\r\n        }}\r\n      ></i>\r\n      <img\r\n        alt=\"monster\"\r\n        src={`https://robohash.org/${id}?set=set2&size=180x180`}\r\n      />\r\n      <h2 className={name.length < 18 ? \"padding-added\" : null}>{name}</h2>\r\n      <p>{email}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Card } from \"../card/card\";\r\nimport \"./card-list.styles.css\";\r\n\r\nexport const CardList = ({ myFav, monsters, clicked }) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {monsters.map((monster) => {\r\n        return (\r\n          <Card\r\n            clicked={(ev, id) => clicked(ev, id)}\r\n            key={monster.id}\r\n            monster={monster}\r\n            isFav={myFav.includes(monster.id)}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\n\nimport \"./search-box.styles.css\";\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n  <input\n    className=\"search\"\n    type=\"search\"\n    placeholder={placeholder}\n    onChange={handleChange}\n  />\n);\n","import React from \"react\";\r\nimport \"./dropDownMenu.css\";\r\n\r\nfunction DropDownMenu({ selected }) {\r\n  return (\r\n    <div className=\"dropdown\">\r\n      <span className=\"sort\">Sort by</span>\r\n      <span>\r\n        <select\r\n          onChange={(ev) => {\r\n            selected(ev.target.value);\r\n          }}\r\n          name=\"sorted\"\r\n        >\r\n          <option value=\"default\">Default</option>\r\n          <option value=\"a-z\">A-Z</option>\r\n          <option value=\"z-a\">Z-A</option>\r\n        </select>\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DropDownMenu;\r\n","import React, { Component } from \"react\";\r\nimport NavBar from \"./components/navBar/navBar\";\r\nimport { CardList } from \"./components/card-list/card-list\";\r\nimport { SearchBox } from \"./components/search-box/search-box\";\r\nimport DropDownMenu from \"./components/dropDownMenu/dropDownMenu\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      monsters: [],\r\n      searchField: \"\",\r\n      showFull: false,\r\n      clickedImg: 0,\r\n      favourites: [],\r\n      showFavs: false,\r\n      sortBy: \"default\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((response) => response.json())\r\n      .then((user) =>\r\n        this.setState({\r\n          monsters: user,\r\n        })\r\n      );\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ searchField: e.target.value });\r\n  };\r\n\r\n  cardClickHandler = (ev, id) => {\r\n    if (!ev.target.className.includes(\"fa-bookmark\")) {\r\n      this.setState({ showFull: true, clickedImg: id });\r\n    } else {\r\n      if (!this.state.favourites.includes(id)) {\r\n        this.setState((prevState) => prevState.favourites.push(id));\r\n      } else {\r\n        this.setState(\r\n          (prevState) =>\r\n            prevState.favourites.splice(\r\n              prevState.favourites.findIndex((fav) => fav === id),\r\n              1\r\n            ),\r\n          () =>\r\n            this.state.favourites.length\r\n              ? null\r\n              : this.setState({ showFavs: false })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  closeFull = () => {\r\n    this.setState({ showFull: false });\r\n  };\r\n\r\n  navItemHandler = (id) => {\r\n    this.setState({ showFavs: id ? true : false });\r\n  };\r\n\r\n  handleSelected = (selected) => {\r\n    this.setState({ sortBy: selected });\r\n  };\r\n\r\n  render() {\r\n    let monsters = [...this.state.monsters];\r\n    const { showFavs, searchField, favourites, sortBy } = this.state;\r\n    switch (sortBy) {\r\n      case \"a-z\":\r\n        monsters = monsters.sort((a, b) =>\r\n          a.name > b.name ? 1 : b.name > a.name ? -1 : 0\r\n        );\r\n        break;\r\n      case \"z-a\":\r\n        monsters = monsters.sort((a, b) =>\r\n          b.name > a.name ? 1 : a.name > b.name ? -1 : 0\r\n        );\r\n        break;\r\n      default:\r\n        monsters = this.state.monsters;\r\n    }\r\n    const myFav = monsters.filter((monster) => favourites.includes(monster.id));\r\n    const whereToSearch = showFavs ? myFav : monsters;\r\n    const filteredMonsters = whereToSearch.filter((monster) =>\r\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\r\n    );\r\n    return (\r\n      <div className=\"App\">\r\n        {this.state.showFull && (\r\n          <div className=\"show-full\" onClick={this.closeFull}>\r\n            <img\r\n              alt=\"monster\"\r\n              src={`https://robohash.org/${this.state.clickedImg}?set=set2&size=180x180`}\r\n            />\r\n          </div>\r\n        )}\r\n        <NavBar\r\n          navItems={\r\n            favourites.length ? [\"Monsters\", \"Favourites\"] : [\"Monsters\"]\r\n          }\r\n          clicked={(id) => this.navItemHandler(id)}\r\n        />\r\n        <h1>Monster Rolodex </h1>\r\n        <SearchBox\r\n          placeholder=\"Search Monster\"\r\n          handleChange={this.handleChange}\r\n        />\r\n        <DropDownMenu selected={(val) => this.handleSelected(val)} />\r\n        {filteredMonsters.length > 0 ? (\r\n          <CardList\r\n            clicked={(ev, id) => this.cardClickHandler(ev, id)}\r\n            monsters={filteredMonsters}\r\n            myFav={favourites}\r\n          />\r\n        ) : (\r\n          <p className=\"error\">Username Doesn't Exist</p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}