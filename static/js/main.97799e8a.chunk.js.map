{"version":3,"sources":["components/navBar/navBar.js","components/card/card.js","components/card-list/card-list.js","components/search-box/search-box.js","App.js","index.js"],"names":["navBar","props","makeActive","className","navItems","map","navItem","id","active","onClick","clicked","Card","useState","fav","setFav","ev","monster","style","top","transition","prevState","alt","src","name","length","email","CardList","monsters","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","cardClickHandler","includes","state","favourites","splice","findIndex","showFavs","push","showFull","clickedImg","closeFull","navItemHandler","fetch","then","response","json","user","this","filteredMonsters","filter","toLowerCase","myFav","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.97799e8a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./navBar.css\";\nfunction navBar(props) {\n  let makeActive;\n  return (\n    <div className=\"nav-bar\">\n      {props.navItems.map((navItem, id) => {\n        switch (id) {\n          case 0:\n            makeActive = props.active ? null : \"active\";\n            break;\n          case 1:\n            makeActive = props.active ? \"active\" : null;\n            break;\n          default:\n            makeActive = null;\n        }\n        return (\n          <span\n            className={makeActive}\n            key={id}\n            onClick={() => props.clicked(id)}\n          >\n            {navItem}\n          </span>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default navBar;\n","import React, { useState } from \"react\";\nimport \"./card.styles.css\";\n\nexport const Card = (props) => {\n  const [fav, setFav] = useState(false);\n  return (\n    <div\n      className=\"card-container\"\n      onClick={(ev) => props.clicked(ev, props.monster.id)}\n    >\n      <i\n        className={fav ? \"fas fa-bookmark\" : \"far fa-bookmark\"}\n        style={fav ? { top: \"-10px\", transition: \"top 0.15s ease-in\" } : null}\n        onClick={() => {\n          setFav((prevState) => !prevState);\n        }}\n      ></i>\n      <img\n        alt=\"monster\"\n        src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\n      />\n      <h2 className={props.monster.name.length < 18 ? \"padding-added\" : null}>\n        {props.monster.name}\n      </h2>\n      <p>{props.monster.email}</p>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Card } from \"../card/card\";\nimport \"./card-list.styles.css\";\n\nexport const CardList = (props) => (\n  <div className=\"card-list\">\n    {props.monsters.map((monster) => (\n      <Card\n        clicked={(ev, id) => props.clicked(ev, id)}\n        key={monster.id}\n        monster={monster}\n      />\n    ))}\n  </div>\n);\n","import React from \"react\";\n\nimport \"./search-box.styles.css\";\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n  <input\n    className=\"search\"\n    type=\"search\"\n    placeholder={placeholder}\n    onChange={handleChange}\n  />\n);\n","import React, { Component } from \"react\";\nimport NavBar from \"./components/navBar/navBar\";\nimport { CardList } from \"./components/card-list/card-list\";\nimport { SearchBox } from \"./components/search-box/search-box\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n      showFull: false,\n      clickedImg: 0,\n      favourites: [],\n      showFavs: false,\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((user) =>\n        this.setState({\n          monsters: user,\n        })\n      );\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n\n  cardClickHandler = (ev, id) => {\n    if (!ev.target.className.includes(\"fa-bookmark\")) {\n      this.setState({ showFull: true, clickedImg: id });\n    } else {\n      if (!this.state.favourites.includes(id)) {\n        this.setState((prevState) => prevState.favourites.push(id));\n      } else {\n        this.setState(\n          (prevState) =>\n            prevState.favourites.splice(\n              prevState.favourites.findIndex((fav) => fav === id),\n              1\n            ),\n          () =>\n            this.state.favourites.length\n              ? null\n              : this.setState({ showFavs: false })\n        );\n      }\n    }\n  };\n\n  closeFull = () => {\n    this.setState({ showFull: false });\n  };\n\n  navItemHandler = (id) => {\n    if (id) {\n      this.setState({ showFavs: true });\n    } else {\n      this.setState({ showFavs: false });\n    }\n  };\n\n  render() {\n    const { monsters, searchField, favourites } = this.state;\n\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    const myFav = monsters.filter((monster) => favourites.includes(monster.id));\n    return (\n      <div className=\"App\">\n        {this.state.showFull && (\n          <div className=\"show-full\" onClick={this.closeFull}>\n            <img\n              alt=\"monster\"\n              src={`https://robohash.org/${this.state.clickedImg}?set=set2&size=180x180`}\n            />\n          </div>\n        )}\n        <NavBar\n          navItems={\n            this.state.favourites.length\n              ? [\"Monsters\", \"Favourites\"]\n              : [\"Monsters\"]\n          }\n          clicked={(id) => this.navItemHandler(id)}\n          active={this.state.showFavs}\n        />\n        <h1>Monster Rolodex </h1>\n        <SearchBox\n          placeholder=\"Search Monster\"\n          handleChange={this.handleChange}\n        />\n        <CardList\n          clicked={(ev, id) => this.cardClickHandler(ev, id)}\n          monsters={this.state.showFavs ? myFav : filteredMonsters}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}