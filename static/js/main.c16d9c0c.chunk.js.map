{"version":3,"sources":["components/navBar/navBar.js","components/card/card.js","components/card-list/card-list.js","components/search-box/search-box.js","components/dropDownMenu/dropDownMenu.js","App.js","index.js"],"names":["NavBar","navItems","clicked","added","handleNotif","recentNotif","showDrop","useState","active","setActive","showDropDown","setShowDropDown","className","map","navItem","id","onClick","data-notifs-count","length","hidden","fav","style","backgroundColor","type","alt","src","name","email","Card","isFav","monster","setFav","ev","top","transition","prevState","CardList","myFav","monsters","includes","SearchBox","placeholder","handleChange","onChange","DropDownMenu","selected","target","value","App","e","setState","searchField","cardClickHandler","recent","push","state","favourites","splice","findIndex","showFavs","notifications","showFull","clickedImg","closeFull","navItemHandler","handleSelected","sortBy","prev","fetch","then","response","json","user","this","sort","a","b","notifs","reduce","acc","cur","unshift","filter","filteredMonsters","toLowerCase","document","addEventListener","closest","val","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c16d9c0c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./navBar.css\";\nfunction NavBar({\n  navItems,\n  clicked,\n  added,\n  handleNotif,\n  recentNotif,\n  showDrop,\n}) {\n  const [active, setActive] = useState(\"Monsters\");\n  const [showDropDown, setShowDropDown] = useState(false);\n  return (\n    <div className=\"nav-bar\">\n      {navItems.map((navItem, id) => {\n        return (\n          <span\n            className={active === navItem ? \"active\" : null}\n            key={id}\n            onClick={() => {\n              clicked(id);\n              setActive(navItem);\n            }}\n          >\n            {navItem}\n          </span>\n        );\n      })}\n      <i\n        data-notifs-count={recentNotif.length}\n        className={`${!recentNotif.length ? \"far\" : \"fas\"} fa-bell`}\n        onClick={() => {\n          setShowDropDown(!showDropDown);\n          handleNotif();\n        }}\n      >\n        <div className=\"notifications\" hidden={!showDrop}>\n          <h4>\n            Notifications <span>{added.length}</span>\n          </h4>\n          {added.map((fav, id) => (\n            <div\n              className=\"notif\"\n              key={id}\n              style={{\n                backgroundColor:\n                  fav.type === \"removed\"\n                    ? \"tomato\"\n                    : \"rgba(179, 202, 145, 0.787)\",\n              }}\n            >\n              <img\n                alt=\"monster\"\n                src={`https://robohash.org/${fav.id}?set=set2&size=180x180`}\n              />\n              <div>\n                <h5>{fav.name}</h5>\n                <h6>{fav.email}</h6>\n              </div>\n            </div>\n          ))}\n        </div>\n      </i>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React, { useState } from \"react\";\r\nimport \"./card.styles.css\";\r\n\r\nexport const Card = ({ clicked, isFav, monster: { id, name, email } }) => {\r\n  const [fav, setFav] = useState(isFav);\r\n  return (\r\n    <div className=\"card-container\" onClick={(ev) => clicked(ev, id)}>\r\n      <i\r\n        className={fav ? \"fas fa-bookmark\" : \"far fa-bookmark\"}\r\n        style={fav ? { top: \"-10px\", transition: \"top 0.15s ease-in\" } : null}\r\n        onClick={() => {\r\n          setFav((prevState) => !prevState);\r\n        }}\r\n      ></i>\r\n      <img\r\n        alt=\"monster\"\r\n        src={`https://robohash.org/${id}?set=set2&size=180x180`}\r\n      />\r\n      <h2 className={name.length < 18 ? \"padding-added\" : null}>{name}</h2>\r\n      <p>{email}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Card } from \"../card/card\";\r\nimport \"./card-list.styles.css\";\r\n\r\nexport const CardList = ({ myFav, monsters, clicked }) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {monsters.map((monster) => {\r\n        return (\r\n          <Card\r\n            clicked={(ev, id) => clicked(ev, id)}\r\n            key={monster.id}\r\n            monster={monster}\r\n            isFav={myFav.includes(monster.id)}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\n\nimport \"./search-box.styles.css\";\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n  <input\n    className=\"search\"\n    type=\"search\"\n    placeholder={placeholder}\n    onChange={handleChange}\n  />\n);\n","import React from \"react\";\r\nimport \"./dropDownMenu.css\";\r\n\r\nfunction DropDownMenu({ selected }) {\r\n  return (\r\n    <div className=\"dropdown\">\r\n      <span className=\"sort\">Sort by</span>\r\n      <span>\r\n        <select\r\n          onChange={(ev) => {\r\n            selected(ev.target.value);\r\n          }}\r\n          name=\"sorted\"\r\n        >\r\n          <option value=\"default\">Default</option>\r\n          <option value=\"a-z\">A-Z</option>\r\n          <option value=\"z-a\">Z-A</option>\r\n        </select>\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DropDownMenu;\r\n","import React, { Component } from \"react\";\r\nimport NavBar from \"./components/navBar/navBar\";\r\nimport { CardList } from \"./components/card-list/card-list\";\r\nimport { SearchBox } from \"./components/search-box/search-box\";\r\nimport DropDownMenu from \"./components/dropDownMenu/dropDownMenu\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      monsters: [],\r\n      searchField: \"\",\r\n      showFull: false,\r\n      clickedImg: 0,\r\n      favourites: [],\r\n      showFavs: false,\r\n      sortBy: \"default\",\r\n      notifications: [],\r\n      recent: [],\r\n      showDrop: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((response) => response.json())\r\n      .then((user) =>\r\n        this.setState({\r\n          monsters: user,\r\n        })\r\n      );\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ searchField: e.target.value });\r\n  };\r\n\r\n  cardClickHandler = (ev, id) => {\r\n    if (!ev.target.className.includes(\"fa-bookmark\")) {\r\n      this.setState({ showFull: true, clickedImg: id });\r\n    } else {\r\n      this.setState((prevState) => prevState.recent.push(id));\r\n      if (!this.state.favourites.includes(id)) {\r\n        this.setState((prevState) => prevState.favourites.push(id));\r\n        this.setState((prevState) =>\r\n          prevState.notifications.push({ id, type: \"added\" })\r\n        );\r\n      } else {\r\n        this.setState(\r\n          (prevState) =>\r\n            prevState.favourites.splice(\r\n              prevState.favourites.findIndex((fav) => fav === id),\r\n              1\r\n            ),\r\n          () =>\r\n            this.state.favourites.length\r\n              ? null\r\n              : this.setState({ showFavs: false })\r\n        );\r\n        this.setState((prevState) =>\r\n          prevState.notifications.push({ id, type: \"removed\" })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  closeFull = () => {\r\n    this.setState({ showFull: false });\r\n  };\r\n\r\n  navItemHandler = (id) => {\r\n    this.setState({ showFavs: id ? true : false });\r\n  };\r\n\r\n  handleSelected = (selected) => {\r\n    this.setState({ sortBy: selected });\r\n  };\r\n  handleNotif = () => {\r\n    this.setState({ recent: [] });\r\n    this.setState((prev) => {\r\n      return {\r\n        ...prev,\r\n        showDrop: !prev.showDrop,\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let monsters = [...this.state.monsters];\r\n    const {\r\n      showFavs,\r\n      searchField,\r\n      favourites,\r\n      sortBy,\r\n      notifications,\r\n      recent,\r\n      showDrop,\r\n    } = this.state;\r\n    switch (sortBy) {\r\n      case \"a-z\":\r\n        monsters = monsters.sort((a, b) =>\r\n          a.name > b.name ? 1 : b.name > a.name ? -1 : 0\r\n        );\r\n        break;\r\n      case \"z-a\":\r\n        monsters = monsters.sort((a, b) =>\r\n          b.name > a.name ? 1 : a.name > b.name ? -1 : 0\r\n        );\r\n        break;\r\n      default:\r\n        monsters = this.state.monsters;\r\n    }\r\n    const notifs = notifications.reduce((acc, cur) => {\r\n      for (let monster of monsters) {\r\n        if (monster.id === cur.id) {\r\n          acc.unshift({ ...monster, type: cur.type });\r\n        }\r\n      }\r\n      return acc;\r\n    }, []);\r\n    const myFav = monsters.filter((monster) => favourites.includes(monster.id));\r\n    const whereToSearch = showFavs ? myFav : monsters;\r\n    const filteredMonsters = whereToSearch.filter((monster) =>\r\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\r\n    );\r\n    document.addEventListener(\"scroll\", () => {\r\n      if (this.state.showDrop) this.setState({ showDrop: false });\r\n    });\r\n    return (\r\n      <div\r\n        className=\"App\"\r\n        onClick={(ev) => {\r\n          if (!ev.target.closest(\".fa-bell\")) {\r\n            this.setState({ showDrop: false });\r\n          }\r\n        }}\r\n      >\r\n        {this.state.showFull && (\r\n          <div className=\"show-full\" onClick={this.closeFull}>\r\n            <img\r\n              alt=\"monster\"\r\n              src={`https://robohash.org/${this.state.clickedImg}?set=set2&size=180x180`}\r\n            />\r\n          </div>\r\n        )}\r\n        <NavBar\r\n          navItems={\r\n            favourites.length ? [\"Monsters\", \"Favourites\"] : [\"Monsters\"]\r\n          }\r\n          clicked={(id) => this.navItemHandler(id)}\r\n          added={notifs}\r\n          handleNotif={this.handleNotif}\r\n          recentNotif={recent}\r\n          showDrop={showDrop}\r\n        />\r\n        <h1>Monster Rolodex </h1>\r\n        <SearchBox\r\n          placeholder=\"Search Monster\"\r\n          handleChange={this.handleChange}\r\n        />\r\n        <DropDownMenu selected={(val) => this.handleSelected(val)} />\r\n        {filteredMonsters.length > 0 ? (\r\n          <CardList\r\n            clicked={(ev, id) => this.cardClickHandler(ev, id)}\r\n            monsters={filteredMonsters}\r\n            myFav={favourites}\r\n          />\r\n        ) : (\r\n          <p className=\"error\">Username Doesn't Exist</p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}